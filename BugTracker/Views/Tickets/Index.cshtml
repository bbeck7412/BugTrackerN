@model IEnumerable<BugTracker.Models.Ticket>


<!DOCTYPE html>


<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

    @if (User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("Submitter"))
        {
            <p>
                <a href=@Url.Action("Create", "Tickets") class="btn btn-primary"> Create New Ticket </a>
            </p>
        }
    }

</head>

<section id="widget-grid" class="">
    <div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false">

        <header>
            <h2> Ticket Index </h2>
        </header>

        <!-- widget div-->
        <div>

            <!-- widget edit box -->
            <div class="jarviswidget-editbox">
                <!-- This area used as dropdown edit box -->

            </div>
            <!-- end widget edit box -->
            <!-- widget content -->
            <div class="widget-body no-padding">

                <table id="datatable_fixed_column" class="table table-striped table-bordered" width="100%">

                    <thead>
                        <tr>

                            <th class="hasinput" style="width:17%">
                                <input type="text" class="form-control" placeholder=" Title " />
                            </th>

                            <th class="hasinput" style="width:17%">
                                <input type="text" class="form-control" placeholder=" Description " />
                            </th>

                            <th class="hasinput" style="width:17%">
                                <input type="text" class="form-control" placeholder=" Priority " />
                            </th>

                            <th class="hasinput" style="width:17%">
                                <input type="text" class="form-control" placeholder=" Type " />
                            </th>

                            <th class="hasinput" style="width:17%">
                                <input type="text" class="form-control" placeholder=" Status " />
                            </th>

                            <th class="hasinput" style="width:17%">
                                <input type="text" class="form-control" placeholder=" Created Date " />
                            </th>

                        </tr>
                        <tr>
                            <th data-class="expand">Title</th>
                            <th> Description </th>
                            <th data-hide="phone"> Priority </th>
                            <th data-hide="phone"> Type </th>
                            <th data-hide="phone,tablet"> Status </th>
                            <th data-hide="phone,tablet"> Created Date </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var tick in Model)
                        {

                            var desc = tick.Description.Length > 30 ? tick.Description.Substring(0, 29) + " ..." : tick.Description;

                            <tr>
                                <td>@tick.Title</td>
                                <td>@desc</td>
                                <td>@tick.TicketPriority.Name</td>
                                <td>@tick.TicketType.Name</td>
                                <td>@tick.TicketStatus.Name</td>
                                <td>@tick.Created.Date.ToString("MM.dd.yyyy")</td>

                            </tr>
                        }
                    </tbody>

                </table>

            </div>
            <!-- end widget content -->

        </div>
        <!-- end widget div -->

    </div>
    <!-- end widget -->





</section>

@section scripts
{
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.colVis.min.js"></script>
    <script src="~/Scripts/dataTables.tableTools.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/datatables.responsive.min.js"></script>

    <script>

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            pageSetUp();

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "oLanguage": {
                    "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                },
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "oLanguage": {
                    "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                },
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            //$("div.toolbar").html('<div class="text-right"><img src="img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "oLanguage": {
                    "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                },
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oLanguage": {
                    "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                },
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })

    </script>
}

@*<table class="table" id="myTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayName("Assigned Developer")
                </th>
                <th>
                    @Html.DisplayName("Project Name")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Submitter)
                </th>
                <th>
                    @Html.DisplayName("Ticket Priority")
                </th>
                <th>
                    @Html.DisplayName("Ticket Status")
                </th>
                <th>
                    @Html.DisplayName("Ticket Type")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Updated)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Developer.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Project.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Submitter.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Updated)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Add Attachment", "Create", "TicketAttachments", new { id = item.Id }, null)
                    </td>
                </tr>
            }
        </tbody>
    </table>*@
