@model BugTracker.Models.TicketDetailViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <style>
        #comment_Height {
            height: 156px !important;
        }
    </style>

    <style>
        .btn-primary.custom-btn {
            background-color: #1b1e24;
            border-color: aliceblue;
        }
    </style>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>
    <div>
        <h4>Ticket</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Developer.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Developer.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Project.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Project.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Submitter.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Submitter.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.TicketPriority.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.TicketPriority.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.TicketStatus.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.TicketStatus.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.TicketType.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.TicketType.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Created)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Created)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.Updated)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.Updated)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ticket.ProjectId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ticket.ProjectId)
            </dd>
        </dl>
    </div>

    <br />
    <br />
    <br />

    <div class="row responsive">

        <div class="col-xs-3">
            <div class="thumbnail">
                <div class="caption" style="background: rgb(94,93,93);background: radial-gradient(circle, rgba(94,93,93,1) 1%, rgba(27,30,36,1) 45%);">
                    <h3 class="text-align-center" style="color:aliceblue"> <b>Ticket Status</b>  </h3>
                    <p class="text-align-center" style="color:aliceblue"> <b><i>@Model.Ticket.TicketStatus.Name</i></b>  </p>
                    <p><a href=@Url.Action("Edit","Tickets", new { id = Model.Ticket.Id}) class="btn btn-primary custom-btn" role="button"> Edit </a> </p>
                </div>
            </div>
        </div>

        <div class="col-xs-3">
            <div class="thumbnail">
                <div class="caption" style="background: rgb(94,93,93);background: radial-gradient(circle, rgba(94,93,93,1) 1%, rgba(27,30,36,1) 45%);">
                    <h3 class="text-align-center" style="color:aliceblue"> <b>Priority Status</b>  </h3>
                    <p class="text-align-center" style="color:aliceblue"> <b><i>@Model.Ticket.TicketPriority.Name</i></b>  </p>
                    <p><a href=@Url.Action("Edit","Tickets", new { id = Model.Ticket.Id}) class="btn btn-primary custom-btn" role="button"> Edit </a> </p>
                </div>
            </div>
        </div>

        <div class="col-xs-3">
            <div class="thumbnail">
                <div class="caption" style="background: rgb(94,93,93);background: radial-gradient(circle, rgba(94,93,93,1) 1%, rgba(27,30,36,1) 45%);">
                    <h3 class="text-align-center" style="color:aliceblue"> <b>Ticket Type</b> </h3>
                    <p class="text-align-center" style="color:aliceblue"> <b><i>@Model.Ticket.TicketType.Name</i></b>  </p>
                    <p><a href=@Url.Action("Edit","Tickets", new { id = Model.Ticket.Id}) class="btn btn-primary custom-btn" role="button"> Edit </a> </p>
                </div>
            </div>
        </div>

        <div class="col-xs-3">
            <div class="thumbnail">
                <div class="caption" style="background: rgb(94,93,93);background: radial-gradient(circle, rgba(94,93,93,1) 1%, rgba(27,30,36,1) 45%);">
                    <h3 class="text-align-center" style="color:aliceblue"> <b>Ticket Created By </b> </h3>
                    <p class="text-align-center" style="color:aliceblue"> <b><i>@Model.Ticket.Submitter.DisplayName</i></b>  </p>
                    <p><a href=@Url.Action("Edit","Tickets", new { id = Model.Ticket.Id}) class="btn btn-primary custom-btn" role="button"> Edit </a> </p>
                </div>
            </div>
        </div>

    </div>

    <hr style="border:2px solid black;" />

    <section id="widget-grid">

        <div class="row">
            <div class="col-xs-4">
                <div class="jarviswidget jarviswidget-color-darken jarviswidget-sortable" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" role="widget">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header role="heading" class="ui-sortable-handle">
                        <div class="jarviswidget-ctrls" role="menu"> <a href="javascript:void(0);" class="button-icon jarviswidget-toggle-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="Collapse"><i class="fa fa-minus "></i></a></div>
                        <h2>Comment form </h2>

                        <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
                    </header>

                    <!-- widget div-->
                    <div role="content">

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        @if (User.Identity.IsAuthenticated)
                        {
                            using (Html.BeginForm("Create", "TicketComments", FormMethod.Post, new { @class = "smart-form client-form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("TicketId", Model.Ticket.Id)

                                <div class="widget-body no-padding">

                                    <form action="php/demo-comment.php" method="post" id="comment-form" class="smart-form" novalidate="novalidate">
                                        <header>
                                            Attach Comment
                                        </header>

                                        <fieldset>
                                            <section>
                                                <label class="label"> Comment Details </label>
                                                <label class="textarea" id="comment_Height">  @Html.TextArea("CommentBody", new { rows = 8, cols = 90 }) </label>
                                            </section>
                                        </fieldset>

                                        <footer>
                                            <button type="submit" name="submit" class="btn btn-primary">
                                                Submit
                                            </button>
                                        </footer>

                                        <div class="message">
                                            <i class="fa fa-check fa-lg"></i>
                                            <p>
                                                Your comment was successfully added!
                                            </p>
                                        </div>
                                    </form>
                                </div>
                            }
                        }
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
            </div>
            <!-- End Comment-->
            <!--Begin Dropzone-->
            <div class="col-xs-8">
                <div class="jarviswidget jarviswidget-color-darken jarviswidget-sortable" id="wid-id-1" data-widget-editbutton="false" role="widget">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header role="heading" class="ui-sortable-handle">
                        <div class="jarviswidget-ctrls" role="menu"> <a href="javascript:void(0);" class="button-icon jarviswidget-toggle-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="Collapse"><i class="fa fa-minus "></i></a> </div>
                        <h2> Attachment Dropzone </h2>

                        <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
                    </header>

                    <!-- widget div-->
                    <div role="content">

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            <form action="upload.php" class="dropzone dz-clickable" id="mydropzone"><div class="dz-default dz-message"><span><span class="text-center"><span class="font-lg visible-xs-block visible-sm-block visible-lg-block"><span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>&nbsp;&nbsp;<h4 class="display-inline"> (Or Click)</h4></span></span></span></span></div></form>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
            </div>

        </div>

    </section>

    <hr style="border:2px solid black;" />
    <div class="row">
        <div class="col-xs-offset-6 col-xs-6 text-align-center">
            Upload section
        </div>
    </div>

    @foreach (var comment in Model.Ticket.TicketComments.OrderByDescending(c => c.Created))
    {
        <div class="row">
            <div class="col-xs-6">
                <ul class="media-list">
                    <li class="media">
                        <a class="pull-left" href="javascript:void(0);"> <img style="width:64px;height:64px " class="img-circle media-object" alt="64x64" src="~/Images/DevImg.jpg"> </a>
                        <div class="media-body">
                            <h1> <i>@comment.User.DisplayName</i> </h1>
                            <p>
                                <h2> <i>@comment.CommentBody</i> </h2>
                            </p>
                            <p>
                                <h4> <i>@comment.Created.ToString("MMM dd, yyyy")</i> </h4>
                            </p>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    }

    <p>
        
        @Html.ActionLink("Edit", "Edit", new { id = Model.Ticket.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
</body>

</html>

@section scripts
{
    <script src="~/Scripts/dropzone.min.js"></script>
    <script src="~/Scripts/jquery-form.min.js"></script>

    <!--Dropzone JS-->
    <script>

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        Dropzone.autoDiscover = false;

        $(document).ready(function () {

            pageSetUp();

            //Dropzone.autoDiscover = false;

            $("#mydropzone").dropzone({
                //url: "/file/post",
                addRemoveLinks: true,
                maxFilesize: 0.5,
                dictDefaultMessage: '<span class="text-center"><span class="font-lg visible-xs-block visible-sm-block visible-lg-block"><span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>&nbsp&nbsp<h4 class="display-inline"> (Or Click)</h4></span>',
                dictResponseError: 'Error uploading file!'
            });


        })

    </script>

    <!--Form JS-->
    <script>

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            pageSetUp();
            var errorClass = 'invalid';
            var errorElement = 'em';

            var $checkoutForm = $('#checkout-form').validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },

                // Rules for form validation
                rules: {
                    fname: {
                        required: true
                    },
                    lname: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    phone: {
                        required: true
                    },
                    country: {
                        required: true
                    },
                    city: {
                        required: true
                    },
                    code: {
                        required: true,
                        digits: true
                    },
                    address: {
                        required: true
                    },
                    name: {
                        required: true
                    },
                    card: {
                        required: true,
                        creditcard: true
                    },
                    cvv: {
                        required: true,
                        digits: true
                    },
                    month: {
                        required: true
                    },
                    year: {
                        required: true,
                        digits: true
                    }
                },

                // Messages for form validation
                messages: {
                    fname: {
                        required: 'Please enter your first name'
                    },
                    lname: {
                        required: 'Please enter your last name'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    phone: {
                        required: 'Please enter your phone number'
                    },
                    country: {
                        required: 'Please select your country'
                    },
                    city: {
                        required: 'Please enter your city'
                    },
                    code: {
                        required: 'Please enter code',
                        digits: 'Digits only please'
                    },
                    address: {
                        required: 'Please enter your full address'
                    },
                    name: {
                        required: 'Please enter name on your card'
                    },
                    card: {
                        required: 'Please enter your card number'
                    },
                    cvv: {
                        required: 'Enter CVV2',
                        digits: 'Digits only'
                    },
                    month: {
                        required: 'Select month'
                    },
                    year: {
                        required: 'Enter year',
                        digits: 'Digits only please'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $registerForm = $("#smart-form-register").validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },

                // Rules for form validation
                rules: {
                    username: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    password: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    },
                    passwordConfirm: {
                        required: true,
                        minlength: 3,
                        maxlength: 20,
                        equalTo: '#password'
                    },
                    firstname: {
                        required: true
                    },
                    lastname: {
                        required: true
                    },
                    gender: {
                        required: true
                    },
                    terms: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    login: {
                        required: 'Please enter your login'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    password: {
                        required: 'Please enter your password'
                    },
                    passwordConfirm: {
                        required: 'Please enter your password one more time',
                        equalTo: 'Please enter the same password as above'
                    },
                    firstname: {
                        required: 'Please select your first name'
                    },
                    lastname: {
                        required: 'Please select your last name'
                    },
                    gender: {
                        required: 'Please select your gender'
                    },
                    terms: {
                        required: 'You must agree with Terms and Conditions'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $reviewForm = $("#review-form").validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },
                // Rules for form validation
                rules: {
                    name: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    review: {
                        required: true,
                        minlength: 20
                    },
                    quality: {
                        required: true
                    },
                    reliability: {
                        required: true
                    },
                    overall: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    name: {
                        required: 'Please enter your name'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: '<i class="fa fa-warning"></i><strong>Please enter a VALID email addres</strong>'
                    },
                    review: {
                        required: 'Please enter your review'
                    },
                    quality: {
                        required: 'Please rate quality of the product'
                    },
                    reliability: {
                        required: 'Please rate reliability of the product'
                    },
                    overall: {
                        required: 'Please rate the product'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $commentForm = $("#comment-form").validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },
                // Rules for form validation
                rules: {
                    name: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    url: {
                        url: true
                    },
                    comment: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    name: {
                        required: 'Enter your name',
                    },
                    email: {
                        required: 'Enter your email address',
                        email: 'Enter a VALID email'
                    },
                    url: {
                        email: 'Enter a VALID url'
                    },
                    comment: {
                        required: 'Please enter your comment'
                    }
                },

                // Ajax form submition
                submitHandler: function (form) {
                    $(form).ajaxSubmit({
                        success: function () {
                            $("#comment-form").addClass('submited');
                        }
                    });
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $contactForm = $("#contact-form").validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },
                // Rules for form validation
                rules: {
                    name: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    message: {
                        required: true,
                        minlength: 10
                    }
                },

                // Messages for form validation
                messages: {
                    name: {
                        required: 'Please enter your name',
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    message: {
                        required: 'Please enter your message'
                    }
                },

                // Ajax form submition
                submitHandler: function (form) {
                    $(form).ajaxSubmit({
                        success: function () {
                            $("#contact-form").addClass('submited');
                        }
                    });
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $loginForm = $("#login-form").validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },
                // Rules for form validation
                rules: {
                    email: {
                        required: true,
                        email: true
                    },
                    password: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    }
                },

                // Messages for form validation
                messages: {
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    password: {
                        required: 'Please enter your password'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $orderForm = $("#order-form").validate({
                errorClass: errorClass,
                errorElement: errorElement,
                highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                },
                // Rules for form validation
                rules: {
                    name: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    phone: {
                        required: true
                    },
                    interested: {
                        required: true
                    },
                    budget: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    name: {
                        required: 'Please enter your name'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    phone: {
                        required: 'Please enter your phone number'
                    },
                    interested: {
                        required: 'Please select interested service'
                    },
                    budget: {
                        required: 'Please select your budget'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

            // START AND FINISH DATE
            $('#startdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#finishdate').datepicker('option', 'minDate', selectedDate);
                }
            });

            $('#finishdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#startdate').datepicker('option', 'maxDate', selectedDate);
                }
            });



        })

    </script>


}
